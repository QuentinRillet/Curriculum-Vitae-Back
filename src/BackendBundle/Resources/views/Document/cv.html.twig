{% extends '@Backend/base.html.twig' %}

{% block container %}
    <div class="row">
        <h4>{{ 'Mettre à jour le CV'|trans }}</h4>
        {{ form_start(form) }}

        {{ form_errors(form.nom) }}
        <div class="file-field input-field">
            <div class="btn">
                <span>File</span>
                {{ form_widget(form.nom) }}
            </div>
            <div class="file-path-wrapper">
                <input class="file-path validate" type="text">
            </div>
        </div>
        {{ form_widget(form) }}

        <button type="submit" class="waves-effect waves-light btn">{{ 'Envoyer'|trans }}</button>
        {{ form_end(form) }}
    </div>
    <div class="divider"></div>
    <div class="row">
        <a class="waves-effect waves-light btn" href="{{ asset('uploads/documents/CV-Resume-Quentin-Rillet.pdf') }}" target="_blank">{{ 'Télécharger'|trans }}</a>
    </div>
    <script src="//mozilla.github.io/pdf.js/web/compatibility.js"></script>

    <script src="//mozilla.github.io/pdf.js/build/pdf.js"></script>

    <div class="divider"></div>

    <canvas id="the-canvas"></canvas>

    <script>
      let url = '{{ asset('uploads/documents/CV-Resume-Quentin-Rillet.pdf') }}'
      PDFJS.workerSrc = '//mozilla.github.io/pdf.js/build/pdf.worker.js'
      // Asynchronous download of PDF
      let loadingTask = PDFJS.getDocument(url);
      loadingTask.promise.then((pdf) => {
        console.log('PDF loaded');

        // Fetch the first page
        let pageNumber = 1;
        pdf.getPage(pageNumber).then((page) => {
          console.log('Page loaded');

          let scale = 1;
          let viewport = page.getViewport(scale);

          // Prepare canvas using PDF page dimensions
          let canvas = document.getElementById('the-canvas');
          let context = canvas.getContext('2d');
          canvas.height = viewport.height;
          canvas.width = viewport.width;

          // Render PDF page into canvas context
          let renderContext = {
            canvasContext: context,
            viewport: viewport
          }
          let renderTask = page.render(renderContext);
          renderTask.then(() => {
            console.log('Page rendered')
          })
        })
      }, (reason) => {
        console.error(reason)
      })
    </script>
{% endblock %}